/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/alerts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** AllAlerts */
        get: operations["ApiAlertsAllAlerts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/alerts/{subway_line}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Alerts */
        get: operations["ApiAlertsSubwayLineAlerts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Status */
        get: operations["ApiStatusStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AlertsResponse */
        AlertsResponse: {
            train: string;
            /** @default [] */
            past: components["schemas"]["Report"][];
            /** @default [] */
            current: components["schemas"]["Report"][];
            /** @default [] */
            future: components["schemas"]["Report"][];
            /** @default [] */
            breaking: components["schemas"]["Report"][];
        };
        /** Report */
        Report: {
            alert_id: string;
            route_id: string;
            affected_stops: components["schemas"]["Stop"][];
            alert_period: string;
            alert_start: string;
            alert_end?: null | string;
            alert_type: string;
            alert_created: string;
            alert_updated: string;
            display_before_active?: null | number;
            header_text: string;
            description_text?: null | string;
        };
        /** Stop */
        Stop: {
            stop_id: string;
            stop_name: string;
        };
        /** TrainStatus */
        TrainStatus: {
            train: string;
            /** @enum {string} */
            status: "normal" | "warning" | "suspended";
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    ApiAlertsAllAlerts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request fulfilled, document follows */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlertsResponse"][];
                };
            };
        };
    };
    ApiAlertsSubwayLineAlerts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                subway_line: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request fulfilled, document follows */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlertsResponse"][];
                };
            };
            /** @description Bad request syntax or unsupported method */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status_code: number;
                        detail: string;
                        extra?: null | {
                            [key: string]: unknown;
                        } | unknown[];
                    };
                };
            };
        };
    };
    ApiStatusStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request fulfilled, document follows */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrainStatus"][];
                };
            };
        };
    };
}
